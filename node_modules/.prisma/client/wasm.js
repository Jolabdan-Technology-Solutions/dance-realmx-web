
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.9.0
 * Query Engine version: 81e4af48011447c3cc503a190e86995b66d2a28e
 */
Prisma.prismaVersion = {
  client: "6.9.0",
  engine: "81e4af48011447c3cc503a190e86995b66d2a28e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.TenantScalarFieldEnum = {
  id: 'id',
  name: 'name',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  username: 'username',
  password: 'password',
  first_name: 'first_name',
  last_name: 'last_name',
  role: 'role',
  profile_image_url: 'profile_image_url',
  auth_provider: 'auth_provider',
  created_at: 'created_at',
  updated_at: 'updated_at',
  subscription_tier: 'subscription_tier',
  tenant_id: 'tenant_id'
};

exports.Prisma.ProfileScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  bio: 'bio',
  phone_number: 'phone_number',
  address: 'address',
  city: 'city',
  state: 'state',
  country: 'country',
  zip_code: 'zip_code',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.CourseScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  price: 'price',
  image_url: 'image_url',
  instructor_id: 'instructor_id',
  preview_video_url: 'preview_video_url',
  video_url: 'video_url',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ModuleScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  course_id: 'course_id',
  order: 'order',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.LessonScalarFieldEnum = {
  id: 'id',
  title: 'title',
  content: 'content',
  video_url: 'video_url',
  module_id: 'module_id',
  order: 'order',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.EnrollmentScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  course_id: 'course_id',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.TestimonialScalarFieldEnum = {
  id: 'id',
  content: 'content',
  rating: 'rating',
  user_id: 'user_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.StripeCustomerScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  stripe_customer_id: 'stripe_customer_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SubscriptionScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  plan_id: 'plan_id',
  stripe_subscription_id: 'stripe_subscription_id',
  stripe_session_id: 'stripe_session_id',
  status: 'status',
  frequency: 'frequency',
  current_period_start: 'current_period_start',
  current_period_end: 'current_period_end',
  cancel_at_period_end: 'cancel_at_period_end',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.BookingScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  instructor_id: 'instructor_id',
  session_start: 'session_start',
  session_end: 'session_end',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UserCertificationScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  course_id: 'course_id',
  issued_at: 'issued_at',
  certificate_url: 'certificate_url',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ResourceCategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ResourceScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  price: 'price',
  seller_id: 'seller_id',
  category_id: 'category_id',
  is_published: 'is_published',
  file_url: 'file_url',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ResourcePurchaseScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  resource_id: 'resource_id',
  stripe_payment_intent_id: 'stripe_payment_intent_id',
  status: 'status',
  amount: 'amount',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  stripe_payment_intent_id: 'stripe_payment_intent_id',
  stripe_session_id: 'stripe_session_id',
  amount: 'amount',
  reference_id: 'reference_id',
  reference_type: 'reference_type',
  created_at: 'created_at',
  updated_at: 'updated_at',
  currency: 'currency',
  metadata: 'metadata',
  status: 'status'
};

exports.Prisma.UserRoleMappingScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserFeatureScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  feature_key: 'feature_key',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  title: 'title',
  message: 'message',
  type: 'type',
  read: 'read',
  data: 'data',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.MessageScalarFieldEnum = {
  id: 'id',
  sender_id: 'sender_id',
  receiver_id: 'receiver_id',
  content: 'content',
  read: 'read',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  parent_id: 'parent_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.TagScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  rating: 'rating',
  comment: 'comment',
  user_id: 'user_id',
  course_id: 'course_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SubscriptionPlanScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  features: 'features',
  priceMonthly: 'priceMonthly',
  priceYearly: 'priceYearly',
  stripePriceIdMonthly: 'stripePriceIdMonthly',
  stripePriceIdYearly: 'stripePriceIdYearly',
  isPopular: 'isPopular',
  isActive: 'isActive',
  isStandalone: 'isStandalone',
  planType: 'planType',
  featureDetails: 'featureDetails',
  unlockedRoles: 'unlockedRoles',
  tier: 'tier',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.UserRole = exports.$Enums.UserRole = {
  GUEST_USER: 'GUEST_USER',
  CURRICULUM_SELLER: 'CURRICULUM_SELLER',
  STUDENT: 'STUDENT',
  ADMIN: 'ADMIN',
  DIRECTORY_MEMBER: 'DIRECTORY_MEMBER',
  CERTIFICATION_MANAGER: 'CERTIFICATION_MANAGER',
  INSTRUCTOR_ADMIN: 'INSTRUCTOR_ADMIN',
  CURRICULUM_ADMIN: 'CURRICULUM_ADMIN',
  COURSE_CREATOR_ADMIN: 'COURSE_CREATOR_ADMIN',
  BOOKING_PROFESSIONAL: 'BOOKING_PROFESSIONAL',
  BOOKING_USER: 'BOOKING_USER'
};

exports.SubscriptionTier = exports.$Enums.SubscriptionTier = {
  FREE: 'FREE',
  SILVER: 'SILVER',
  GOLD: 'GOLD',
  PLATINUM: 'PLATINUM'
};

exports.SubscriptionStatus = exports.$Enums.SubscriptionStatus = {
  ACTIVE: 'ACTIVE',
  TRIALING: 'TRIALING',
  CANCELED: 'CANCELED',
  FAILED: 'FAILED'
};

exports.SubscriptionFrequency = exports.$Enums.SubscriptionFrequency = {
  MONTHLY: 'MONTHLY',
  YEARLY: 'YEARLY'
};

exports.PaymentType = exports.$Enums.PaymentType = {
  COURSE: 'COURSE',
  RESOURCE: 'RESOURCE',
  SUBSCRIPTION: 'SUBSCRIPTION'
};

exports.PaymentStatus = exports.$Enums.PaymentStatus = {
  PENDING: 'PENDING',
  SUCCEEDED: 'SUCCEEDED',
  FAILED: 'FAILED',
  REFUNDED: 'REFUNDED',
  PARTIALLY_REFUNDED: 'PARTIALLY_REFUNDED',
  CANCELED: 'CANCELED'
};

exports.Prisma.ModelName = {
  Tenant: 'Tenant',
  User: 'User',
  Profile: 'Profile',
  Course: 'Course',
  Module: 'Module',
  Lesson: 'Lesson',
  Enrollment: 'Enrollment',
  Testimonial: 'Testimonial',
  StripeCustomer: 'StripeCustomer',
  Subscription: 'Subscription',
  Booking: 'Booking',
  UserCertification: 'UserCertification',
  ResourceCategory: 'ResourceCategory',
  Resource: 'Resource',
  ResourcePurchase: 'ResourcePurchase',
  Payment: 'Payment',
  UserRoleMapping: 'UserRoleMapping',
  UserFeature: 'UserFeature',
  Notification: 'Notification',
  Message: 'Message',
  Category: 'Category',
  Tag: 'Tag',
  Review: 'Review',
  SubscriptionPlan: 'SubscriptionPlan'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
